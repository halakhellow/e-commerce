{"version":3,"sources":["pages/Register/Register.js","components/HrWithText/HrWithText.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/FormInput/FormInput.js"],"names":["connect","dispatch","signUpStart","userData","useState","displayName","email","password","confirmPassword","errors","setUserData","handleChange","e","target","name","value","handleSubmit","a","preventDefault","className","content","onSubmit","type","faIcon","placeholder","required","HrWithText","data-content","this","props","Component","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError","FormInput","htmlFor","id","onChange"],"mappings":"qRAsFeA,sBAAQ,MAJE,SAACC,GAAD,MAAe,CACtCC,YAAa,SAACC,GAAD,OAAcF,EAASC,YAAYC,QAGnCH,EA3EA,SAAC,GAAqB,IAAnBE,EAAkB,EAAlBA,YAAkB,EACJE,mBAAS,CACrCC,YAAa,GACbC,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBC,OAAQ,KANwB,mBAC7BN,EAD6B,KACnBO,EADmB,KAS5BL,EAA0DF,EAA1DE,YAAaC,EAA6CH,EAA7CG,MAAOC,EAAsCJ,EAAtCI,SAAUC,EAA4BL,EAA5BK,gBAAiBC,EAAWN,EAAXM,OAEjDE,EAAe,SAACC,GAClBF,EAAY,2BAAKP,GAAN,kBAAiBS,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAGnDC,EAAY,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACjBL,EAAEM,iBACEX,IAAaC,EAFA,uBAGfE,EAAY,2BAAKP,GAAN,IAAgBM,OAAQ,+BAHpB,0BAMjBP,EAAY,CAAEI,QAAOC,WAAUF,gBANd,2CAAH,sDAShB,OACE,yBAAKc,UAAU,YACb,kBAAC,IAAD,CAAYC,QAAQ,uBACpB,0BAAMC,SAAUL,GACd,kBAAC,IAAD,CACEL,aAAcA,EACdI,MAAOV,EACPiB,KAAK,OACLR,KAAK,cACLS,OAAO,OACPC,YAAY,OACZC,UAAQ,IAEV,kBAAC,IAAD,CACEd,aAAcA,EACdI,MAAOT,EACPgB,KAAK,QACLR,KAAK,QACLS,OAAO,WACPC,YAAY,QACZC,UAAQ,IAEV,kBAAC,IAAD,CACEd,aAAcA,EACdI,MAAOR,EACPe,KAAK,WACLR,KAAK,WACLS,OAAO,OACPC,YAAY,WACZC,UAAQ,IAEV,kBAAC,IAAD,CACEd,aAAcA,EACdI,MAAOP,EACPc,KAAK,WACLR,KAAK,kBACLS,OAAO,OACPC,YAAY,mBACZC,UAAQ,IAEV,yBAAKN,UAAU,kBAAkBV,GACjC,kBAAC,IAAD,CAAWa,KAAK,UAAhB,iB,oFCzEFI,G,6KAEF,OAAO,wBAAIP,UAAU,UAAUQ,eAAcC,KAAKC,MAAMT,c,GAFnCU,cAKVJ,O,mGCJA,SAASK,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAG7B,QAETkB,GAAKM,EAAKU,SAAWhB,GAH8CO,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAkB,EAAA,GAA2BnB,EAAKC,IGLjF,WACb,MAAM,IAAImB,UAAU,6IHIgF,K,oFIFhGC,G,8KAEF,OACE,yBAAKlC,UAAU,aACb,2BACEmC,QAAS1B,KAAKC,MAAM0B,GACpBpC,UAAS,iBAAYS,KAAKC,MAAMN,UAElC,yCAAOiC,SAAU5B,KAAKC,MAAMlB,cAAkBiB,KAAKC,a,GARnCC,cAcTuB","file":"static/js/5.7378d8fe.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FormInput from \"../../components/FormInput/FormInput\";\r\nimport CustomBtn from \"../../components/CustomBtn/CustomBtn\";\r\nimport HrWithText from \"../../components/HrWithText/HrWithText\";\r\n\r\nimport { signUpStart } from \"../../redux/user/user-actions\";\r\n\r\nimport \"./Register.css\";\r\n\r\nlet Register = ({ signUpStart }) => {\r\n  let [userData, setUserData] = useState({\r\n    displayName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    errors: \"\",\r\n  });\r\n\r\n  let { displayName, email, password, confirmPassword, errors } = userData;\r\n\r\n  let handleChange = (e) => {\r\n    setUserData({ ...userData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  let handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setUserData({ ...userData, errors: \"The passwords don't match\" });\r\n      return;\r\n    }\r\n    signUpStart({ email, password, displayName });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Register\">\r\n      <HrWithText content=\"Create New Account\" />\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          handleChange={handleChange}\r\n          value={displayName}\r\n          type=\"text\"\r\n          name=\"displayName\"\r\n          faIcon=\"user\"\r\n          placeholder=\"Name\"\r\n          required\r\n        />\r\n        <FormInput\r\n          handleChange={handleChange}\r\n          value={email}\r\n          type=\"email\"\r\n          name=\"email\"\r\n          faIcon=\"envelope\"\r\n          placeholder=\"Email\"\r\n          required\r\n        />\r\n        <FormInput\r\n          handleChange={handleChange}\r\n          value={password}\r\n          type=\"password\"\r\n          name=\"password\"\r\n          faIcon=\"lock\"\r\n          placeholder=\"Password\"\r\n          required\r\n        />\r\n        <FormInput\r\n          handleChange={handleChange}\r\n          value={confirmPassword}\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          faIcon=\"lock\"\r\n          placeholder=\"Confirm Password\"\r\n          required\r\n        />\r\n        <div className=\"Register-error\">{errors}</div>\r\n        <CustomBtn type=\"submit\">Sign up</CustomBtn>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => ({\r\n  signUpStart: (userData) => dispatch(signUpStart(userData)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Register);\r\n","import React, { Component } from \"react\";\r\nimport \"./HrWithText.css\";\r\n\r\nclass HrWithText extends Component {\r\n  render() {\r\n    return <hr className=\"hr-text\" data-content={this.props.content} />;\r\n  }\r\n}\r\nexport default HrWithText;\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { Component } from \"react\";\r\nimport \"./FormInput.css\";\r\n\r\nclass FormInput extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"FormInput\">\r\n        <label\r\n          htmlFor={this.props.id}\r\n          className={`fas fa-${this.props.faIcon}`}\r\n        ></label>\r\n        <input onChange={this.props.handleChange} {...this.props} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormInput;\r\n"],"sourceRoot":""}