{"version":3,"sources":["components/CheckoutItem/CheckoutItem.js","components/stripe/StripeButton.js","components/stripe/stripe-publish-key.js","pages/Checkout/CheckoutPage.js","components/HrWithText/HrWithText.js"],"names":["connect","item","provided","innerRef","dispatch","name","imageUrl","price","quantity","className","draggableProps","dragHandleProps","ref","src","alt","onClick","decreaseQuantity","addItem","removeItem","StripeButton","priceForStripe","stripeKey","image","description","panelLabel","amount","currency","shippingAddress","billingAddress","token","console","log","alert","CustomBtn","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectItemsTotalPrice","updateCartItems","items","HrWithText","content","onDragEnd","result","destination","source","droppableId","index","updatedItems","Array","from","splice","reorderedItem","droppableProps","map","key","id","draggableId","placeholder","data-content","this","props","Component"],"mappings":"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","file":"static/js/7.cde7de15.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./CheckoutItem.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addItem,\r\n  decreaseQuantity,\r\n  removeItem,\r\n} from \"../../redux/cart/cart-actions\";\r\n\r\nlet CheckoutItem = ({ item, provided, innerRef, dispatch }) => {\r\n  let { name, imageUrl, price, quantity } = item;\r\n  return (\r\n    <div\r\n      className=\"CheckoutItem\"\r\n      {...provided.draggableProps}\r\n      {...provided.dragHandleProps}\r\n      ref={innerRef}\r\n    >\r\n      <div className=\"fas fa-grip-lines-vertical\"></div>\r\n      <div className=\"img-container\">\r\n        <img src={imageUrl} alt={name} />\r\n      </div>\r\n      <span className=\"name\">{name}</span>\r\n      <span className=\"quantity\">\r\n        <span\r\n          className=\"fas fa-minus\"\r\n          onClick={() => dispatch(decreaseQuantity(item))}\r\n        ></span>\r\n        <span className=\"value\">{quantity}</span>\r\n        <span\r\n          className=\"fas fa-plus\"\r\n          onClick={() => dispatch(addItem(item))}\r\n        ></span>\r\n      </span>\r\n      <span className=\"price\">${price}</span>\r\n      <div onClick={() => dispatch(removeItem(item))} className=\"remove-button\">\r\n        &#10005;\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect()(CheckoutItem);\r\n","import React from \"react\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\n\r\nimport publishableKey from \"./stripe-publish-key\";\r\n\r\nimport CustomBtn from \"../CustomBtn/CustomBtn\";\r\n\r\nimport \"./StripeButton.css\";\r\n\r\nlet StripeButton = ({ price }) => {\r\n  let priceForStripe = price * 100;\r\n\r\n  let onToken = (token) => {\r\n    console.log(token);\r\n    alert(\"Payment Successful!\");\r\n  };\r\n  return (\r\n    <div className=\"StripeButton\">\r\n      <StripeCheckout\r\n        stripeKey={publishableKey}\r\n        image=\"https://stripe.com/img/documentation/checkout/marketplace.png\"\r\n        name=\"E-commerce\"\r\n        description={`Your total is $${price}`}\r\n        panelLabel=\"Pay\"\r\n        amount={priceForStripe}\r\n        currency=\"USD\"\r\n        shippingAddress\r\n        billingAddress\r\n        token={onToken}\r\n      >\r\n        <CustomBtn>Pay With Card</CustomBtn>\r\n      </StripeCheckout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StripeButton;\r\n","let publishableKey =\r\n  \"pk_test_51I1HvOEkdrIAG6kMBj69w7aoyVdFBB5Mo6oLsTDYfwdUF3ZyKU7Ry0XQvONCXyLhKYIdJmPJIovAUS7x9lG8MqsL00dZzZMBl6\";\r\n\r\nexport default publishableKey;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport HrWithText from \"../../components/HrWithText/HrWithText\";\r\nimport CheckoutItem from \"../../components/CheckoutItem/CheckoutItem\";\r\nimport StripeButton from \"../../components/stripe/StripeButton\";\r\n\r\nimport { updateCartItems } from \"../../redux/cart/cart-actions\";\r\nimport {\r\n  selectCartItems,\r\n  selectItemsTotalPrice,\r\n} from \"../../redux/cart/cart-selectors\";\r\n\r\nimport \"./CheckoutPage.css\";\r\n\r\nlet CheckoutPage = ({ cartItems, total, updateCartItems }) => {\r\n  function handleOnDragEnd(result) {\r\n    if (!result.destination) return;\r\n    if (\r\n      result.source.droppableId === result.destination.droppableId &&\r\n      result.source.index === result.destination.index\r\n    )\r\n      return;\r\n    let updatedItems = Array.from(cartItems);\r\n    let [reorderedItem] = updatedItems.splice(result.source.index, 1);\r\n    updatedItems.splice(result.destination.index, 0, reorderedItem);\r\n\r\n    updateCartItems(updatedItems);\r\n  }\r\n  return (\r\n    <div className=\"CheckoutPage\">\r\n      <HrWithText content=\"Your Shopping Cart\" />\r\n      <div className=\"CheckoutPage-header\">\r\n        <div className=\"header-block\">\r\n          <span>Product</span>\r\n        </div>\r\n        <div className=\"header-block\">\r\n          <span>Quantity</span>\r\n        </div>\r\n        <div className=\"header-block\">\r\n          <span>Price</span>\r\n        </div>\r\n        <div className=\"header-block\">\r\n          <span>Remove</span>\r\n        </div>\r\n      </div>\r\n      <DragDropContext onDragEnd={handleOnDragEnd}>\r\n        <Droppable droppableId=\"checkout-items\">\r\n          {(provided) => (\r\n            <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n              {cartItems.map((item, index) => {\r\n                return (\r\n                  <Draggable\r\n                    key={item.id}\r\n                    draggableId={item.name}\r\n                    index={index}\r\n                  >\r\n                    {(provided) => (\r\n                      <CheckoutItem\r\n                        item={item}\r\n                        innerRef={provided.innerRef}\r\n                        provided={provided}\r\n                      />\r\n                    )}\r\n                  </Draggable>\r\n                );\r\n              })}\r\n              {provided.placeholder}\r\n            </ul>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n\r\n      <div className=\"total-price\">Total Price : ${total}</div>\r\n      <StripeButton price={total} />\r\n      <div className=\"test-card\">\r\n        *Please use the following test credit card for payments*\r\n        <br />\r\n        5555 5555 5555 4444 - Exp: 07/21 - CVV: 123 &nbsp;\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = createStructuredSelector({\r\n  cartItems: selectCartItems,\r\n  total: selectItemsTotalPrice,\r\n});\r\n\r\nlet mapDispatchToProps = (dispatch) => ({\r\n  updateCartItems: (items) => dispatch(updateCartItems(items)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutPage);\r\n","import React, { Component } from \"react\";\r\nimport \"./HrWithText.css\";\r\n\r\nclass HrWithText extends Component {\r\n  render() {\r\n    return <hr className=\"hr-text\" data-content={this.props.content} />;\r\n  }\r\n}\r\nexport default HrWithText;\r\n"],"sourceRoot":""}